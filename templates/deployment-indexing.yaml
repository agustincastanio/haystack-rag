# templates/deployment-indexing.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-indexing
  namespace: {{ .Values.namespace }}
  labels:
    app: rag-indexing
    {{- include "haystack.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.indexing.replicaCount }}
  selector:
    matchLabels:
      app: rag-indexing
  template:
    metadata:
      labels:
        app: rag-indexing
    spec:
      containers:
      - name: app
        image: {{ .Values.image.registry }}/haystack-indexing:{{ .Values.image.tag }}
        envFrom:
        - configMapRef: { name: rag-config }
        - secretRef  : { name: rag-secrets }
        env:
        {{- range $key, $value := .Values.indexing.env }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        ports:
        - containerPort: {{ .Values.indexing.port }}
        resources:
          {{- toYaml .Values.indexing.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: {{ .Values.indexing.livenessProbe.path }}
            port: {{ .Values.indexing.port }}
          initialDelaySeconds: {{ .Values.indexing.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.indexing.livenessProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.indexing.readinessProbe.path }}
            port: {{ .Values.indexing.port }}
          initialDelaySeconds: {{ .Values.indexing.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.indexing.readinessProbe.periodSeconds }}
        volumeMounts:
        - name: filestore
          mountPath: /app/files
      volumes:
      - name: filestore
        emptyDir: {}